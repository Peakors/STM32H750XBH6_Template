# SPDX-License-Identifier: GPL-2.0-or-later

# This is a FK750M5-XBH6-SDRAM with a single STM32H750XBH6 chip.
# https://item.taobao.com/item.htm?id=682521953131
# QQ交流群：536665479
# Made by Peakors

# This is for using the DAPLINK
adapter driver cmsis-dap

transport select swd

set CHIPNAME STM32H750XBH6

set QUADSPI 1

# enable stmqspi
if {![info exists QUADSPI]} {
    set QUADSPI 1
}

source [find target/stm32h7x.cfg]

#reset_config srst_only
reset_config none

# QUADSPI initialization
# qpi: 4-line mode
proc qspi_init { qpi } {
    global a
    mmw 0x580244E0 0x000007FF 0;# RCC_AHB4ENR |= GPIOAEN-GPIOKEN (enable clocks)
    mmw 0x580244D4 0x00004000 0;# RCC_AHB3ENR |= QSPIEN (enable clock)
    sleep 1;# Wait for clock startup

	# Port F: PF10:AF09:H, PF09:AF10:H, PF08:AF10:H, PF07:AF09:H, PF06:AF09:H
	mmw 0x58021400 0x002AA000 0x00155000    ;# MODER
	mmw 0x58021408 0x002AA000 0x00155000    ;# OSPEEDR
	mmw 0x5802140C 0x00000000 0x003FF000    ;# PUPDR
	mmw 0x58021420 0x99000000 0x66000000    ;# AFRL
	mmw 0x58021424 0x000009AA 0x00000655    ;# AFRH
	# Port G: PG06:AF10:H
	mmw 0x58021800 0x00002000 0x00001000    ;# MODER
	mmw 0x58021808 0x00002000 0x00001000    ;# OSPEEDR
	mmw 0x5802180C 0x00000000 0x00003000    ;# PUPDR
	mmw 0x58021820 0x0A000000 0x05000000    ;# AFRL

#    mww 0x52005030 0x00001000				;# QUADSPI_LPTR: deactivate CS after 4096 clocks when FIFO is full
#    mww 0x52005000 0x03500008				;# QUADSPI_CR: PRESCALER=3, APMS=1, FTHRES=0, FSEL=0, DFM=0, SSHIFT=0, TCEN=1
#    mww 0x52005004 0x00170100				;# QUADSPI_DCR: FSIZE=0x17, CSHT=0x01, CKMODE=0
#    mmw 0x52005000 0x00000001 0			;# QUADSPI_CR: EN=1
#    # 1-line spi mode
#    mww 0x52005014 0x000001F5				;# QUADSPI_CCR: FMODE=0x0, DMODE=0x0, DCYC=0x0, ADSIZE=0x0, ADMODE=0x0, IMODE=0x1, INSTR=RSTQIO
#    sleep 1
#    # memory-mapped read mode with 3-byte addresses
#    mww 0x52005014 0x0D002503				;# QUADSPI_CCR: FMODE=0x3, DMODE=0x1, DCYC=0x0, ADSIZE=0x2, ADMODE=0x1, IMODE=0x1, INSTR=READ


    mww 0x52005000 0x01000F10               ;# QUADSPI_CR: PRESCALER = 0x1(2分频), FTHRES = 0b01111, FSEL=0, DFM=0, SSHIFT=1
    mww 0x52005004 0x00160001               ;# QUADSPI_DCR: FSIZE = 0b10110, CSHT = 0b000, CKMODE = 0b1
    mmw 0x52005000 0x00000001 0             ;# QUADSPI_CR: EN=1
    # 内存映射模式 单线SPI模式, 3字节地址
    mww 0x52005014 0x0D002503               ;# QUADSPI_CCR: FMODE=0x3, DMODE=0x1, DCYC=0x0, ADSIZE=0x2, ADMODE=0x1, IMODE=0x1, INSTR=READ

    #    CCR:
    #    31     DDR      = 0b0:     禁止双倍数据速率模式
    #    30     DHHC     = 0b0:     使用模拟延迟来延迟数据输出
    #    29     FRCM     = 0b0:     正常模式
    #    28     SIOO     = 0b0:     在每个事务中发送指令
    #    27:26  FMODE    = 0b11:    设置为内存映射模式
    #    25:24  DMODE    = 0b11:    四线传输数据
    #                    = 0b01:    单线传输数据
    #    23:23   保留位   = 0b0:     保留
    #    22:18   DCYC    = 0b01010:  空指令周期数 = 10
    #                    = 0b00000:  空指令周期数 = 0
    #    17:16  ABSIZE   = 0b11:    交替字节长度 = 32位
    #                    = 0b00:    交替字节长度 = 8位
    #    15:14  ABMODE   = 0b11:    四线传输交替字节
    #                    = 0b00:    无交替字节
    #    13:12  ADSIZE   = 0b11:    32 位地址
    #                    = 0b10:    24 位地址
    #    11:10  ADDRESS  = 0b11:    四线传输地址
    #                    = 0b01:    单线传输地址
    #    9:8      IMODE  = 0b11:    四线传输指令
    #                    = 0b01:    单线传输指令
    #    7:0     INSTR   = 0x0B:    指定要发送到外部 SPI 设备的指令0x0B(快速读取)

}


$_CHIPNAME.cpu0 configure -event reset-init {
    global QUADSPI

    mmw 0x52002000 0x00000004 0x0000000B    ;# FLASH_ACR: 4 WS for 192 MHZ HCLK

    mmw 0x58024400 0x00000001 0x00000018    ;# RCC_CR: HSIDIV=1, HSI on
    mmw 0x58024410 0x10000000 0xEE000007    ;# RCC_CFGR: MCO2=system, MCO2PRE=8, HSI as system clock
    mww 0x58024418 0x00000040                ;# RCC_D1CFGR: D1CPRE=1, D1PPRE=2, HPRE=1
    mww 0x5802441C 0x00000440                ;# RCC_D2CFGR: D2PPRE2=2, D2PPRE1=2
    mww 0x58024420 0x00000040                ;# RCC_D3CFGR: D3PPRE=2
    mww 0x58024428 0x00000040                ;# RCC_PPLCKSELR: DIVM3=0, DIVM2=0, DIVM1=4, PLLSRC=HSI
    mmw 0x5802442C 0x0001000C 0x00000002    ;# RCC_PLLCFGR: PLL1RGE=8MHz to 16MHz, PLL1VCOSEL=wide
    mww 0x58024430 0x01070217                ;# RCC_PLL1DIVR: 192 MHz: DIVR1=2, DIVQ=8, DIVP1=2, DIVN1=24
    mmw 0x58024400 0x01000000 0                ;# RCC_CR: PLL1ON=1
    sleep 1
    mmw 0x58024410 0x00000003 0                ;# RCC_CFGR: PLL1 as system clock
    sleep 1

    adapter speed 24000

    if { $QUADSPI } {
        qspi_init 1
    }
}











